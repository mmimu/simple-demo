<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!-- 该文件 和 mapper 接口 中的 代码配套-->
<!--使用 mybatis 的mapper 代理方式时应注意以下几点 -->
<!-- 1. namespace 的值 和 mapper 接口的 定义一致 -->
<!-- 2. mapper 中接口的 方法名称 和 statement id 的名称一直 如 此时的findUserById 和接口中 findUserById方法名称一致 -->
<!-- 3. mapper 中接口的 参数类型 和 statement中 paramaterType 类型一致如 此时的findUserById parameterType=java.lang.string 而 和接口中 findUserById方法的 参数为string 类型  -->
<!-- 4. mapper 中接口的 返回类型 和 statement中 resultType 类型一致如 此时的findUserById resultType=com.mimu.simple.mybatis.model.UserData 而 和接口中 findUserById方法的 返回值 com.mimu.simple.mybatis.model.UserData 类型-->

<mapper namespace="com.mimu.simple.mybatis.mapper.UserMapper">
    <select id="findUserById" parameterType="java.lang.Integer" resultType="com.mimu.simple.mybatis.model.UserData">
    select * from user_info where id = #{id}
    </select>

    <select id="listUserByName" parameterType="java.lang.String" resultType="com.mimu.simple.mybatis.model.UserData">
        select * from  user_info where person_name like '%${value}%'
    </select>

    <insert id="insertUser" parameterType="com.mimu.simple.mybatis.model.UserData">
        insert into user_info(person_id,person_name) value (#{person_id},#{pserson_name})
    </insert>


    <insert id="insertUserReturnPrimaryId" parameterType="com.mimu.simple.mybatis.model.UserData">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select last_insert_id()
        </selectKey>
        insert into user_info(person_id,person_name) values (#{person_id},#{pserson_name})
    </insert>

    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user_info where id=#{id}
    </delete>

    <update id="updateUser" parameterType="com.mimu.simple.mybatis.model.UserData">
        update user_info set person_id=#{person_id},person_name=#{pserson_name} where id=#{id}
    </update>

</mapper>